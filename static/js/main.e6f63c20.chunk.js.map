{"version":3,"sources":["components/avatar.png","components/Header.js","contexts/StudentContext.js","components/EditForm.js","components/Student.js","components/AddForm.js","components/Pagination.js","components/StudentList.js","App.js","router/AppRouter.js","index.js"],"names":["Header","className","to","activeClassName","exact","src","avatar","alt","StudentContext","createContext","StudentContextProvider","props","useState","id","uuidv4","name","email","phone","address","date","students","setStudents","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","sortedStudents","sort","a","b","Provider","value","addStudent","deleteStudent","filter","student","updateStudent","updatedStudent","map","children","EditForm","theStudent","setName","setEmail","setPhone","setAddress","setDate","useContext","errors","setErrors","Form","onSubmit","e","preventDefault","test","length","Group","Label","Control","type","placeholder","onChange","target","controlId","Button","variant","block","Student","show","setShow","handleClose","OverlayTrigger","overlay","Tooltip","onClick","Modal","onHide","closeButton","Title","Body","Footer","AddForm","newStudent","setNewStudent","onInputChange","Pagination","pages","setCurrentPage","currentStudents","numOfPages","i","push","currentButton","setCurrentButton","href","prev","page","index","next","StudentList","showAlert","setShowAlert","currentPage","studentsPerPage","setTimeout","indexOfLastStudent","indexOfFirstStudent","slice","totalPagesNum","Math","ceil","Alert","App","AppRouter","component","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6f63c20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.6552e88a.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport avatar from './avatar.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>STUDENTS DIRECTORY</h1>\r\n            <hr />\r\n            <div className=\"links\">\r\n                <NavLink to=\"/\" className=\"link\" activeClassName=\"active\" exact>\r\n                    Home Page\r\n                </NavLink>\r\n                <NavLink to=\"/manage\" className=\"link\" activeClassName=\"active\">\r\n                    Manage Directory\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <img src={avatar} alt=\"\" />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import { createContext, useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const StudentContext = createContext()\r\n\r\nconst StudentContextProvider = (props) => {\r\n\r\n    const [students, setStudents] = useState([\r\n        { id: uuidv4(), name: 'Juan Dela Cruz', email: 'juandelacruz@mail.com', phone: '09361234567', address: 'Philippines', date: 'Feb 29, 2020' }\r\n    ])\r\n\r\n\r\n    useEffect(() => {\r\n            setStudents(JSON.parse(localStorage.getItem('students')))\r\n        }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('students', JSON.stringify(students));\r\n    })\r\n\r\n\r\n\r\n    const sortedStudents = students.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n\r\n\r\n\r\n    const addStudent = (name, email, phone, address, date) => {\r\n        setStudents([...students, { id: uuidv4(), name, email, phone, address, date }])\r\n    }\r\n\r\n    const deleteStudent = (id) => {\r\n        setStudents(students.filter(student => student.id !== id))\r\n    }\r\n\r\n    const updateStudent = (id, updatedStudent) => {\r\n        setStudents(students.map((student) => student.id === id ? updatedStudent : student))\r\n    }\r\n\r\n    return (\r\n        <StudentContext.Provider value={{ sortedStudents, addStudent, deleteStudent, updateStudent }}>\r\n            {props.children}\r\n        </StudentContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StudentContextProvider;","import { Form, Button } from \"react-bootstrap\"\r\n\r\nimport { StudentContext } from '../contexts/StudentContext';\r\nimport { useContext, useState } from 'react';\r\n\r\nconst EditForm = ({ theStudent }) => {\r\n\r\n    const id = theStudent.id;\r\n\r\n    const [name, setName] = useState(theStudent.name);\r\n    const [email, setEmail] = useState(theStudent.email);\r\n    const [phone, setPhone] = useState(theStudent.phone);\r\n    const [address, setAddress] = useState(theStudent.address);\r\n    const [date, setDate] = useState(theStudent.date);\r\n   \r\n\r\n\r\n    const { updateStudent } = useContext(StudentContext);\r\n\r\n    const updatedStudent = { id, name, email, phone, address, date }\r\n\r\n    const [errors, setErrors] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let errors = {};\r\n\r\n        if (!updatedStudent.name) {\r\n            errors.name = \"Full Name field cannot be blank.\";\r\n        }\r\n        else if (!/^[a-zA-Z,. ]+$/.test(updatedStudent.name)) {\r\n            errors.name = \"Full Name field accept characters values only.\";\r\n        }\r\n        else if (updatedStudent.name.length > 30) {\r\n            errors.name = \"Full Name field accept up to 30 in size only\";\r\n        }\r\n        else if (!updatedStudent.email) {\r\n            errors.email = \"Email Address field cannot be blank.\";\r\n        }\r\n        else if (updatedStudent.email.length > 45) {\r\n            errors.email = \"Email Address field accept up to 45 in size only.\";\r\n        }\r\n        else if (!/\\S+@\\S+/.test(updatedStudent.email)) {\r\n            errors.email = \"Email Address field should have email domain.\";\r\n        }\r\n        else if (!updatedStudent.phone) {\r\n            errors.phone = \"Contact Number field cannot be blank.\";\r\n        }\r\n        else if (!/^[0-9 ]+$/.test(updatedStudent.phone)) {\r\n            errors.phone = \"Contact Number field accept numerical values only.\";\r\n        }\r\n        else if (updatedStudent.phone.length > 11) {\r\n            errors.phone = \"Contact Number field accept up to 11 in size only.\";\r\n        }\r\n        else if (!updatedStudent.address) {\r\n            errors.address = \"Location field cannot be blank.\";\r\n        }\r\n        else if (!updatedStudent.date) {\r\n            errors.date = \"Birthdate field cannot be blank.\";\r\n        }\r\n        else {\r\n            updateStudent(id, updatedStudent);\r\n        }\r\n\r\n\r\n        setErrors(errors);\r\n\r\n    };\r\n        \r\n    \r\n\r\n    return (\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Full Name (eg. Dela Cruz, Juan C.) *</Form.Label>\r\n                <Form.Control\r\n                    className=\"input-control\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Last name, First Name, Middle Initial\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    \r\n                />\r\n                {errors.name && <p className=\"error\">{errors.name}</p>}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address (example@email.com) *</Form.Label>\r\n                <Form.Control\r\n                    className=\"input-control\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email Address\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    \r\n                />\r\n                {errors.email && <p className=\"error\">{errors.email}</p>}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"phone\">\r\n                <Form.Label>Contact Number (09361234567) *</Form.Label>\r\n                <Form.Control\r\n                    className=\"input-control\"\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Contact Number\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                />{errors.phone && <p className=\"error\">{errors.phone}</p>}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"address\">\r\n                <Form.Label>Location *</Form.Label>\r\n                <Form.Control\r\n                    className=\"input-control\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    placeholder=\"Enter Address\"\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                />{errors.address && <p className=\"error\">{errors.address}</p>}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"date\">\r\n                <Form.Label>Birthdate *</Form.Label>\r\n                <Form.Control\r\n                    className=\"input-control\"\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={date}\r\n                    placeholder=\"Birthdate\"\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                />\r\n                {errors.date && <p className=\"error\">{errors.date}</p>}\r\n            </Form.Group>\r\n            <Button variant=\"success\" type=\"submit\" block>\r\n                Edit Student\r\n            </Button>\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport default EditForm;","import { useContext, useState, useEffect } from 'react';\r\nimport { StudentContext } from '../contexts/StudentContext';\r\nimport { Modal, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport EditForm from './EditForm'\r\n\r\n\r\n\r\nconst Student = ({ student }) => {\r\n\r\n    const { deleteStudent } = useContext(StudentContext)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    useEffect(() => {\r\n        handleClose()\r\n    }, [student])\r\n\r\n    return (\r\n        <>\r\n            <td>{student.name}</td>\r\n            <td>{student.email}</td>\r\n            <td>{student.phone}</td>\r\n            <td>{student.address}</td>\r\n            <td>{student.date}</td>\r\n            <td>\r\n                <OverlayTrigger\r\n                    overlay={\r\n                        <Tooltip id={`tooltip-top`}>\r\n                            Edit\r\n                        </Tooltip>\r\n                    }>\r\n                    <button onClick={handleShow} className=\"btn text-warning btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE254;</i></button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                    overlay={\r\n                        <Tooltip id={`tooltip-top`}>\r\n                            Delete\r\n                        </Tooltip>\r\n                    }>\r\n                    <button onClick={() => deleteStudent(student.id)} className=\"btn text-danger btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE872;</i></button>\r\n                </OverlayTrigger>\r\n\r\n\r\n            </td>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Edit Student\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <EditForm theStudent={student} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close Button\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Student;","import { Form, Button } from \"react-bootstrap\"\r\nimport { StudentContext } from '../contexts/StudentContext';\r\nimport React, { useContext, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst AddForm = () => {\r\n\r\n    const { addStudent } = useContext(StudentContext);\r\n\r\n    const [newStudent, setNewStudent] = useState({\r\n        name: \"\", email: \"\", phone: \"\", address: \"\", date: \"\"\r\n    });\r\n\r\n    const { name, email, phone, address, date } = newStudent;\r\n\r\n\r\n    const [errors, setErrors] = useState('');\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n               \r\n        let errors = {};\r\n     \r\n            if (!newStudent.name) {\r\n                errors.name = \"Full Name field cannot be blank.\";             \r\n            }\r\n            else if (!/^[a-zA-Z,. ]+$/.test(newStudent.name)) {\r\n                errors.name = \"Full Name field accept characters values only.\";\r\n            }\r\n            else if (newStudent.name.length > 30) {\r\n                errors.name = \"Full Name field accept up to 30 in size only\";\r\n            }\r\n            else if (!newStudent.email) {\r\n                errors.email = \"Email Address field cannot be blank.\";\r\n            }\r\n            else if (newStudent.email.length > 45) {\r\n                errors.email = \"Email Address field accept up to 45 in size only.\";\r\n            }\r\n            else if (!/\\S+@\\S+/.test(newStudent.email)) {\r\n                errors.email = \"Email Address field should have email domain.\";\r\n            }\r\n            else if (!newStudent.phone) {\r\n                errors.phone = \"Contact Number field cannot be blank.\";\r\n            }\r\n            else if (!/^[0-9 ]+$/.test(newStudent.phone)) {\r\n                errors.phone = \"Contact Number field accept numerical values only.\";\r\n            }\r\n            else if (newStudent.phone.length > 11) {\r\n                errors.phone = \"Contact Number field accept up to 11 in size only.\";\r\n            }\r\n            else if (!newStudent.address) {\r\n                errors.address = \"Location field cannot be blank.\";\r\n            }\r\n            else if (!newStudent.date) {\r\n                errors.date = \"Birthdate field cannot be blank.\";\r\n            }        \r\n            else {\r\n                addStudent(name, email, phone, address, date);\r\n            }\r\n       \r\n        \r\n        setErrors(errors);\r\n\r\n    };\r\n\r\n    const onInputChange = (e) => {\r\n           setNewStudent({ ...newStudent, [e.target.name]: e.target.value });\r\n        }\r\n \r\n    return (\r\n        <>\r\n            \r\n            <div className=\"main-form\">\r\n                \r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Full Name (eg. Dela Cruz, Juan C.) *</Form.Label>\r\n                        <Form.Control\r\n                            className=\"input-control\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Last name, First Name, Middle Initial\"\r\n                            onChange={onInputChange}\r\n                        />\r\n                        {errors.name && <p className=\"error\">{errors.name}</p>}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address (example@email.com) *</Form.Label>\r\n                        <Form.Control\r\n                            className=\"input-control\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Enter Email Address\"\r\n                            onChange={onInputChange}\r\n                        />\r\n                        {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"phone\">\r\n                        <Form.Label>Contact Number (09361234567) *</Form.Label>\r\n                        <Form.Control\r\n                            className=\"input-control\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={phone}\r\n                            placeholder=\"Enter Contact Number\"\r\n                            onChange={onInputChange}\r\n                        />\r\n                        {errors.phone && <p className=\"error\">{errors.phone}</p>}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"address\">\r\n                        <Form.Label>Location *</Form.Label>\r\n                        <Form.Control\r\n                            className=\"input-control\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            value={address}\r\n                            placeholder=\"Enter Address\"\r\n                            onChange={onInputChange}\r\n                        />\r\n                        {errors.address && <p className=\"error\">{errors.address}</p>}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"date\">\r\n                        <Form.Label>Birthdate *</Form.Label>\r\n                        <Form.Control\r\n                            className=\"input-control\"\r\n                            type=\"date\"\r\n                            name=\"date\"\r\n                            value={date}\r\n                            placeholder=\"Birthdate\"\r\n                            onChange={onInputChange}\r\n                        />\r\n                        {errors.date && <p className=\"error\">{errors.date}</p>}\r\n                    </Form.Group>\r\n\r\n                    \r\n                    <div className=\"text-center\">\r\n                        <Button variant=\"success\" type=\"submit\" className=\"submit-btn\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n                </div>\r\n            \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AddForm;","import { useEffect, useState } from \"react\";\r\n\r\nconst Pagination = ({ pages, setCurrentPage, currentStudents, sortedStudents }) => {\r\n\r\n\r\n    const numOfPages = [];\r\n\r\n    for (let i = 1; i <= pages; i++) {\r\n        numOfPages.push(i);\r\n    }\r\n\r\n    const [currentButton, setCurrentButton] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(currentButton);\r\n    }, [currentButton, setCurrentPage])\r\n\r\n    return (\r\n        <div className=\"clearfix\">\r\n            <div className=\"hint-text\">Showing <b>{currentStudents.length}</b> out of <b>{sortedStudents.length}</b> entries</div>\r\n            <ul className=\"pagination\">\r\n                <li className={`${currentButton === 1 ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\"\r\n                    onClick={() => setCurrentButton((prev) => prev === 1 ? prev : prev - 1)}\r\n                >Previous</a></li>\r\n                {\r\n                    numOfPages.map((page, index) => {\r\n                        return (\r\n                            <li key={index} className={`${currentButton === page ? 'page-item active' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\r\n                                onClick={() => setCurrentButton(page)}\r\n                            >{page}</a></li>\r\n                        )\r\n                    })\r\n\r\n                }\r\n\r\n                <li className={`${currentButton === numOfPages.length ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\"\r\n                    onClick={() => setCurrentButton((next) => next === numOfPages.length ? next : next + 1)}\r\n                >Next</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n\r\n/* <li className=\"page-item disabled\"><a href=\"#!\">Previous</a></li>\r\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">1</a></li>\r\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">2</a></li>\r\n<li className=\"page-item active\"><a href=\"#!\" className=\"page-link\">3</a></li>\r\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">4</a></li>\r\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">5</a></li>\r\n<li className=\"page-item\"><a href=\"#!\" className=\"page-link\">Next</a></li> */","import { Modal, Button, Alert } from 'react-bootstrap';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { StudentContext } from '../contexts/StudentContext';\r\nimport Student from './Student';\r\nimport AddForm from './AddForm';\r\nimport Pagination from './Pagination';\r\n\r\nconst StudentList = () => {\r\n\r\n    const { sortedStudents } = useContext(StudentContext);\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n    //const handleShowAlert = () =>setShowAlert(true);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [studentsPerPage] = useState(2)\r\n\r\n    const handleShowAlert = () => {\r\n        setShowAlert(true);\r\n        setTimeout(() => {\r\n            setShowAlert(false);\r\n        }, 2000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleClose();\r\n\r\n        return () => {\r\n            handleShowAlert();\r\n        }\r\n    }, [sortedStudents])\r\n\r\n    const indexOfLastStudent = currentPage * studentsPerPage;\r\n    const indexOfFirstStudent = indexOfLastStudent - studentsPerPage;\r\n    const currentStudents = sortedStudents.slice(indexOfFirstStudent, indexOfLastStudent);\r\n    const totalPagesNum = Math.ceil(sortedStudents.length / studentsPerPage);\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"table-title\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <h2><b>Manage Students Directory</b></h2>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <Button onClick={handleShow} className=\"btn btn-success\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE147;</i> <span>Add New Student</span></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Alert show={showAlert} variant=\"success\">\r\n                Students Directory Updated Succefully!\r\n            </Alert>\r\n\r\n            <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                        <th>Address</th>\r\n                        <th>Birthdate</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {\r\n                        currentStudents.map(student => (\r\n                            <tr key={student.id}>\r\n                                <Student student={student} />\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n            <Pagination pages={totalPagesNum}\r\n                setCurrentPage={setCurrentPage}\r\n                currentStudents={currentStudents}\r\n                sortedStudents={sortedStudents} />\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Add Student\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddForm />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close Button\r\n                    </Button>\r\n                </Modal.Footer>\r\n                </Modal>\r\n                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentList;","import StudentList from './components/StudentList';\nimport StudentContextProvider from './contexts/StudentContext';\n\n\nfunction App() {\n    return (\n        <div className=\"container-m\">\n            <div className=\"table-responsive\">\n                <div className=\"table-wrapper\">\n                    <StudentContextProvider>\n                        <StudentList />\n                    </StudentContextProvider>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport App from '../App';\n\n\n\n\nconst AppRouter = () => {\n    \n\n    return (\n        <BrowserRouter>\n            <div>\n                <Header />\n                <div className=\"main-content\">\n\n                    <Switch>\n                        \n                        <Route component={App} path=\"/manage\" />\n                        <Route component={() => <Redirect to=\"/\" />} />\n                    </Switch>\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\n\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));"],"sourceRoot":""}